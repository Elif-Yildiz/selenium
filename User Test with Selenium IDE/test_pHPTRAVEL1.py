# Generated by Selenium IDE

import pytest
import time
import json
from selenium import webdriver
from selenium.webdriver.common.by import By
from selenium.webdriver.common.action_chains import ActionChains
from selenium.webdriver.support import expected_conditions
from selenium.webdriver.support.wait import WebDriverWait
from selenium.webdriver.common.keys import Keys
from selenium.webdriver.common.desired_capabilities import DesiredCapabilities

import requests
import os
import whisper
import warnings
from pydub import AudioSegment
import speech_recognition as sr


class TestPHPTRAVEL1():
  def setup_method(self, method):
    self.driver = webdriver.Firefox()
    self.vars = {}
  
  def teardown_method(self, method):
    self.driver.quit()
  
  def wait_for_window(self, timeout = 2):
    time.sleep(round(timeout / 1000))
    wh_now = self.driver.window_handles
    wh_then = self.vars["window_handles"]
    if len(wh_now) > len(wh_then):
      return set(wh_now).difference(set(wh_then)).pop()
  
  def test_pHPTRAVEL1(self):
  

    self.driver.get("https://phptravels.net/signup")
    time.sleep(3)


    self.driver.find_element(By.ID, "firstname").send_keys("Test")
    time.sleep(3)


    self.driver.find_element(By.ID, "last_name").send_keys("User")

    time.sleep(3)

    self.driver.find_element(By.ID, "phone").send_keys("555 4444333")
    time.sleep(3)

    self.driver.find_element(By.CSS_SELECTOR, ".filter-option-inner-inner").click()

    self.driver.find_element(By.CSS_SELECTOR, ".bs-searchbox > .form-control").send_keys("+90")

    self.driver.find_element(By.CSS_SELECTOR, ".text > .text-dark").click()

    time.sleep(3)

    self.driver.find_element(By.ID, "user_email").send_keys("signup-user@phptravels.com")
    time.sleep(3)

    self.driver.find_element(By.ID, "password").send_keys("signupuser123")
    time.sleep(3)

    DOWNLOADS_FOLDER = "/home/elifyildiz/Desktop"	
    time.sleep(3)   
   
    self.driver.switch_to.frame(self.driver.find_element(By.CSS_SELECTOR, "iframe[title='reCAPTCHA']"))

    checkbox = self.driver.find_element(By.CSS_SELECTOR, ".recaptcha-checkbox-border")
    checkbox.click()

    time.sleep(3)
    self.driver.switch_to.default_content()#unutma

    self.driver.switch_to.frame(self.driver.find_element(By.CSS_SELECTOR, "iframe[title='recaptcha challenge expires in two minutes']"))

    self.driver.find_element(By.ID, "recaptcha-audio-button").click()

    time.sleep(3)

    audio_link = self.driver.find_element(By.CLASS_NAME, "rc-audiochallenge-tdownload-link")
    audio_link_url = audio_link.get_attribute("href")
    time.sleep(1)

    mp3_file_path = DOWNLOADS_FOLDER + "/audio.mp3"
    wav_file_path = DOWNLOADS_FOLDER + "/ses.wav"

    file_name = f'audio.mp3'
    file_path = os.path.abspath(os.path.join(DOWNLOADS_FOLDER, file_name))
    os.makedirs(DOWNLOADS_FOLDER, exist_ok=True)

    response = requests.get(audio_link_url)
    open(file_path, 'wb').write(response.content)
    audio = AudioSegment.from_mp3(mp3_file_path)
    audio.export(wav_file_path, format='wav')
    print("Conversion to WAV successful")

    
    recognizer = sr.Recognizer()
    with sr.AudioFile(wav_file_path) as source:
      audio_data = recognizer.record(source)

    text = recognizer.recognize_sphinx(audio_data, language="en-US")
    print("Transcription: ", text)
    os.remove(wav_file_path)
    os.remove(mp3_file_path)

    self.driver.find_element(By.ID, "audio-response").send_keys(text)
    checkbox = self.driver.find_element(By.ID, "recaptcha-verify-button")
    checkbox.click()
    self.driver.switch_to.default_content()

    self.driver.find_element(By.CSS_SELECTOR, ".signup_button").click()


t1 = TestPHPTRAVEL1()
t1.setup_method(None) 
time.sleep(1) 
t1.test_pHPTRAVEL1()
time.sleep(1) 
#t1.teardown_method(None)
  
